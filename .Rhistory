feel
feel <- factor(feel, levels = c("Cold", "Medium", "Hot"),
labels = c("C", "M", "H"), ordered = TRUE)
feel
manager <- c(1, 2, 3, 4, 5)
date <- c("10/24/08", "10/28/08", "10/1/08", "10/12/08", "5/1/09")
country <- c("US", "US", "UK", "UK", "UK")
gender <- c("M", "F", "F", "M", "F")
age <- c(32, 45, 25, 39, 99)
q1 <- c(5, 3, 3, 3, 2)
q2 <- c(4, 5, 5, 3, 2)
q3 <- c(5, 2, 5, 4, 1)
q4 <- c(5, 5, 5, NA, 2)
q5 <- c(5, 5, 2, NA, 1)
leadership <- data.frame(manager, date, country, gender, age,
q1, q2, q3, q4, q5, stringsAsFactors=FALSE)
leadership
str(leadership)
library(ggplot2)
library(dplyr)
library(tidyr)
library(lubridate)
View(leadership)
leadership$date <- dmy(leadership$date)
leadership$date
manager <- c(1, 2, 3, 4, 5)
date <- c("10/24/08", "10/28/08", "10/1/08", "10/12/08", "5/1/09")
country <- c("US", "US", "UK", "UK", "UK")
gender <- c("M", "F", "F", "M", "F")
age <- c(32, 45, 25, 39, 99)
q1 <- c(5, 3, 3, 3, 2)
q2 <- c(4, 5, 5, 3, 2)
q3 <- c(5, 2, 5, 4, 1)
q4 <- c(5, 5, 5, NA, 2)
q5 <- c(5, 5, 2, NA, 1)
leadership <- data.frame(manager, date, country, gender, age,
q1, q2, q3, q4, q5, stringsAsFactors=FALSE)
leadership$date <- mdy(leadership$date)
leadership$date
str(leadership)
leadership
leadership <- leadership %>% gather(q1,q2,q3,q4,q5, key = Qtr, value = Rating)
leadership
leadership <- leadership %>% spread(key = Qtr, value = Rating)
leadership
x <- round(10*runif(100, min = 1, max = 10))
breakval <- c(-Inf, 25, 50, 75, +Inf)
breaklab <- c("Less than 25", "26 to 50", "51 to 75", "More than 75")
cut(x, breaks = breakval, labels = breaklab)
y <- cut(x, breaks = breakval, labels = breaklab)
df <- data.frame(x,y)
head(df,20)
str(df)
df2 <- df %>% group_by(y) %>% summarise(Count = n(), Average = mean())
df2 <- df %>% group_by(y) %>% summarise(Count = n(x), Average = mean(x))
df2 <- df %>% group_by(y) %>% summarise(Count = n(x), Average = mean(x))
df2 <- df %>% group_by(y) %>% summarise(Count = n(), Average = mean(x))
df2
summarise(df)
df
summary(df)
df %>% filter(y == "Less than 25") %>% mean(x)
df %>% filter(y == "Less than 25")
dfc <- df %>% filter(y == "Less than 25")
mean(dfc$x)
dfd <- df %>% filter(y == "26 to 50")
mean(dfd$x)
df2
df2$Average
df %>% rename(x = myData)
df %>% rename(myData = x)
df
leadership
anyNA(leadership)
is.na(leadership)
leadership[is.na(leadership),]
subset(leadership, is.na(leadership))
leadership
filter(leadership, is.na(leadership))
!complete.cases(leadership)
complete.cases(leadership)
leadership
summary(leadership)
subset(leadership, !complete.cases(leadership))
str(leadership)
summary(leadership)
newdata <- leadership %>% arrange(age)
newdata
newdata <- leadership %>% arrange(gender, age)
newdata
newdata <- leadership %>% select(q1, q2, q3, q4, q5)
newdata
myvars <- paste("q", 1:5, sep="")
myvars
x <- runif(1000, 1,100)
hist(x, breaks = 10)
a <- sample(x,50, replace = TRUE)
mean(a)
b <- numeric()
for (i in 1:1000){
a <- sample(x,50, replace = TRUE)
b[i] <- mean(a)
}
plot(density(b))
hist(b, breaks = 10)
for (i in 1:10000){
a <- sample(x,50, replace = TRUE)
b[i] <- mean(a)
}
plot(density(b))
hist(b, breaks = 10)
library(ggplot2)
b <- as.data.frame(b)
head(b)
df <- as.data.frame(b)
library(ggplot2)
ggplot(df, aes(b))  + geom_freqpoly()
name <- "Bob"
cat( "Hello", name, "\b.\n", "Isn\'t R", "\t", "GREAT?\n")
paste( "Hello", name, "\b.\n", "Isn\'t R", "\t", "GREAT?\n")
paste( "Hello", name, ".", \n,"Isn't R", , "GREAT?\n")
paste( "Hello", name, ".", ,"\n Isn't R", , "GREAT?\n")
paste( "Hello", name, ".", ,"\n Isn't R", "GREAT?\n")
paste( "Hello", name, ".", "\n Isn't R", "GREAT?\n")
y <- rep(1:3, 2)
y <- rep(1:3, each=2)
Student <- c("John Davis", "Angela Williams", "Bullwinkle Moose",
"David Jones", "Janice Markhammer", "Cheryl Cushing",
"Reuven Ytzrhak", "Greg Knox", "Joel England",
"Mary Rayburn")
library(dplyr)
library(tidyr)
Math <- c(502, 600, 412, 358, 495, 512, 410, 625, 573, 522)
Science <- c(95, 99, 80, 82, 75, 85, 80, 95, 89, 86)
English <- c(25, 22, 18, 15, 20, 28, 15, 30, 27, 18)
dff <- data.frame(Student, Math, Science, English)
remove(dff)
df <- data.frame(Student, Math, Science, English)
head(df,9)
df <- df %>% separate(Student, into = c("Firstname", "Lastname") ,sep = " ")
head(df,9)
df <- df %>% mutate(score = sum("Math", "Science", "English"))
df <- df %>% mutate(score = sum(Math, Science, English))
df
df <- df %>% select(-score)
df
remove(Math)
remove(Science)
remove(English)
df <- df %>% mutate(score = sum(Math, Science, English))
df
df <- df %>% mutate(score = Math + Science + English)
df
502+95+25
df$score <- scale(df$score)
df
df <- df %>% arrange(Firstname)
df
df <- df %>% arrange(Lastname, Firstname)
df
score_breaks <- quantile(df$score, probs = c(.8,.6,.4,.2))
score_breaks
grade <- cut(df$score, breaks = score_breaks, labels = c("A", "B", "C", "D", "F"))
score_breaks <- c(+Inf, score_breaks, -Inf)
grade <- cut(df$score, breaks = score_breaks, labels = c("A", "B", "C", "D", "F"))
df$grade <- grade
df
df <- df %>% mutate(score = scale(Math) + scale(Science) + scale(English))
df
z <- scale(df[,3:5])
z
rowsum(z)
apply(z,1,sum)
df <- df %>% mutate(score = (scale(Math) + scale(Science) + scale(English))/3)
df
Student <- c("John Davis", "Angela Williams", "Bullwinkle Moose",
"David Jones", "Janice Markhammer", "Cheryl Cushing",
"Reuven Ytzrhak", "Greg Knox", "Joel England",
"Mary Rayburn")
Math <- c(502, 600, 412, 358, 495, 512, 410, 625, 573, 522)
Science <- c(95, 99, 80, 82, 75, 85, 80, 95, 89, 86)
English <- c(25, 22, 18, 15, 20, 28, 15, 30, 27, 18).
df <- data.frame(Student, Math, Science, English)
df <- df %>% separate(Student, into = c("Firstname", "Lastname") ,sep = " ")
df <- df %>% mutate(score = (scale(Math) + scale(Science) + scale(English))/3)
df <- df %>% arrange(Lastname, Firstname)
score_breaks <- quantile(df$score, probs = c(.8,.6,.4,.2))
score_breaks <- c(+Inf, score_breaks, -Inf)
grade <- cut(df$score, breaks = score_breaks, labels = c("A", "B", "C", "D", "F"))
df$grade <- grade
"David Jones", "Janice Markhammer", "Cheryl Cushing",
"Reuven Ytzrhak", "Greg Knox", "Joel England",
"Mary Rayburn")
Math <- c(502, 600, 412, 358, 495, 512, 410, 625, 573, 522)
Science <- c(95, 99, 80, 82, 75, 85, 80, 95, 89, 86)
English <- c(25, 22, 18, 15, 20, 28, 15, 30, 27, 18).
df <- data.frame(Student, Math, Science, English)
English <- c(25, 22, 18, 15, 20, 28, 15, 30, 27, 18).
Math <- c(502, 600, 412, 358, 495, 512, 410, 625, 573, 522)
Science <- c(95, 99, 80, 82, 75, 85, 80, 95, 89, 86)
English <- c(25, 22, 18, 15, 20, 28, 15, 30, 27, 18)
df <- data.frame(Student, Math, Science, English)
df <- df %>% separate(Student, into = c("Firstname", "Lastname") ,sep = " ")
df <- df %>% mutate(score = (scale(Math) + scale(Science) + scale(English))/3)
df <- df %>% arrange(Lastname, Firstname)
score_breaks <- quantile(df$score, probs = c(.8,.6,.4,.2))
score_breaks <- c(+Inf, score_breaks, -Inf)
grade <- cut(df$score, breaks = score_breaks, labels = c("A", "B", "C", "D", "F"))
df$grade <- grade
df
score_breaks
grade <- cut(df$score, breaks = score_breaks)
grade
df$grade <- grade
df
grade <- cut(df$score, breaks = score_breaks, labels = c("F", "D", "C", "B", "A"))
df$grade <- grade
df
score_breaks <- quantile(df$score, probs = c(.2,.4,.6,.8))
score_breaks
score_breaks <- c(-Inf, score_breaks, +Inf)
grade <- cut(df$score, breaks = score_breaks,
labels = c("F", "D", "C", "B", "A"))
grade
Student <- c("John Davis", "Angela Williams", "Bullwinkle Moose",
"David Jones", "Janice Markhammer", "Cheryl Cushing",
"Reuven Ytzrhak", "Greg Knox", "Joel England",
"Mary Rayburn")
Math <- c(502, 600, 412, 358, 495, 512, 410, 625, 573, 522)
Science <- c(95, 99, 80, 82, 75, 85, 80, 95, 89, 86)
English <- c(25, 22, 18, 15, 20, 28, 15, 30, 27, 18)
df <- data.frame(Student, Math, Science, English)
df <- df %>%
separate(Student, into = c("Firstname", "Lastname") ,sep = " ") %>%
arrange(Lastname, Firstname)
df <- df %>% mutate(score = (scale(Math) + scale(Science) + scale(English))/3)
score_breaks <- quantile(df$score, probs = c(.2,.4,.6,.8))
score_breaks <- c(-Inf, score_breaks, +Inf)
grade <- cut(df$score, breaks = score_breaks,
labels = c("F", "D", "C", "B", "A"))
df$grade <- grade
df
mystats <- function(x, parametric=TRUE, print=FALSE) {
if (parametric) {
center <- mean(x); spread <- sd(x)
} else {
center <- median(x); spread <- mad(x)
}
if (print & parametric) {
cat("Mean=", center, "\n", "SD=", spread, "\n")
} else if (print & !parametric) {
cat("Median=", center, "\n", "MAD=", spread, "\n")
}
result <- list(center=center, spread=spread)
return(result)
}
set.seed(1234)
x <- rnorm(500)
mystats <- function(x, parametric=TRUE, print=FALSE) {
if (parametric) {
center <- mean(x); spread <- sd(x)
} else {
center <- median(x); spread <- mad(x)
}
if (print & parametric) {
cat("Mean=", center, "\n", "SD=", spread, "\n")
} else if (print & !parametric) {
cat("Median=", center, "\n", "MAD=", spread, "\n")
}
result <- list(center=center, spread=spread)
return(result)
}
set.seed(1234)
x <- rnorm(500)
y <- mystats(x)
y
y <- mystats(x, F, T)
y
1*(1+.25)^4
x <- 1000
y <- (1 + 1/x)^x
y <- (1 + 1/x)^x
x <- 1:1000
y <- (1 + 1/x)^x
plot(x,y)
library(ggplot2)
df <- data.frame(x=x, y=y)
g1 <- ggplot(df, aes(x,y)) + geom_line()
g1
g1 <- coord_cartesian(xlim = c(1,100))
g1
g1 <- coord_cartesian(xlim = c(1,100))
g1
g1 <- g1 + coord_cartesian(xlim = c(1,100))
g1
g1 <- ggplot(df, aes(x,y)) + geom_line()
g1 <- g1 + coord_cartesian(xlim = c(1,100))
g1
pf(15.36,5,65)
pf(15.36,5,65, lower.tail = F)
df <- iris
str(df)
table(df$Species)
table(df$Petal.Length,df$Species)
df <- mtcars
str(df)
df$am <- as.factor(df$am)
df$am <- as.factor(df$am)
df$gear <- as.factor(df$gear)
table(df$am, df$gear)
table(df$gear, df$am)
mytable <- table(df$gear, df$am)
is.matrix(mytable)
addmargins(mytable)
myproptab <- prop.table(df$gear, df$am)
mytable <- addmargins(mytable)
myproptab <- prop.table(mytable)
myproptab
mytable <- table(df$gear, df$am)
myproptab <- prop.table(mytable)
myproptab
myproptab <- prop.table(df$gear, df$am)
mytable <- table(df$gear, df$am)
mytable
mytable <- addmargins(mytable)
mytable
myproptab <- prop.table(mytable[1:3,1:2])
myproptab
myproptab <- addmargins(myproptab)
myproptab
round(myproptab,2)
mytable
mytable <- table(df$gear, df$am)
mytable
colnames(mytable) <- c("Auto", "Manual")
rownames(mytable) <- c("Three", "Four", "Five")
mytable
chisq.test(mytable)
library(vcd)
mytable <- xtabs(~Treatment+Improved, data=Arthritis)
mytable
chisq.test(mytable)
mytable <- table(Arthritis$Treatment, Arthritis$Improved)
mytable
mytable <- xtabs(~Treatment+Improved, data=Arthritis)
mytable2 <- table(Arthritis$Treatment, Arthritis$Improved)
mytable
mytable2
chisq.test(mytable)
chisq.test(mytable2)
df <- mtcars
mytable <- table(df$gear, df$am)
colnames(mytable) <- c("Auto", "Manual")
rownames(mytable) <- c("Three", "Four", "Five")
chisq.test(mytable)
install.packages("gtools")
combn(4,2)
choose(4,2)
library(gtools)
combinations(4,2)
mynames <- letters
mynames <- LETTERS
mynames <- LETTERS[1:4]
combinations(mynames,mynum)
combinations(mynames,2)
Marx.Bros <- c("Groucho","Chico","Harpo","Zeppo")
combinations(4,2,v=Marx.Bros)
combinations(5,2,v=Marx.Bros)
combinations(3,2,v=Marx.Bros)
combinations(2,2,v=Marx.Bros)
successes <- seq(0,10)
dbinom(1,10,prob = 1/6)
choose(10,1) * (1/6)* (5/6)^9
x <- dbinom(0:10,10,prob = 1/6)
sum(x)
y <- pbinom(10,10, prob = 1/6)
y
x <- dbinom(0:9,10,prob = 1/6)
sum(x)
x <- dbinom(0:9,10,prob = 1/6)
sum(x)
x <- 0:9
x <- dbinom(0:9,10,prob = 1/6)
sum(x)
x <- 0:10
x <- dbinom(0:9,10,prob = 1/6)
sum(x)
x <- 0:10
x <- dbinom(x,10,prob = 1/6)
sum(x)
x <- 0:9
x <- dbinom(x,10,prob = 1/6)
sum(x)
x <- 0:8
x <- dbinom(x,10,prob = 1/6)
sum(x)
x <- 0:9
x <- dbinom(x,10,prob = 1/10)
sum(x)
x <- 0:7
x <- dbinom(x,10,prob = 1/10)
sum(x)
y <- pbinom(7,10, prob = 1/10)
y
x <- 0:5
x <- dbinom(x,10,prob = 1/10)
sum(x)
y <- pbinom(5,10, prob = 1/10)
y
x <- 0:10
x <- dbinom(x,10,prob = 1/10)
sum(x)
x
data.frame(x, cumsum(x))
x <- 0:10
y <- dbinom(x,10,prob = 1/10)
sum(y)
data.frame(x, y, cumsum(y))
data.frame(success, Prob = myprob, CumProb = cumsum(y))
data.frame(Success = success, Prob = myprob, CumProb = cumsum(y))
success <- 0:10
myprob <- dbinom(x,10,prob = 1/10)
data.frame(Success = success, Prob = myprob, CumProb = cumsum(y))
df <- data.frame(Success = success, Prob = myprob, CumProb = cumsum(y))
library(ggplot2)
ggplot(df, aes(Success, Prob)) + geom_bar()
ggplot(df, aes(Success, Prob)) + geom_bar(stat = "identity")
ggplot(df, aes(Success, Prob)) + geom_col()
ggplot(df, aes(Success, Prob)) + geom_col(fill="white", color = "blue")
ggplot(df, aes(Success, Prob)) + geom_col(fill="white", color = "blue") +
theme_minimal()
ggplot(df, aes(Success, Prob)) +
geom_col(fill="white", aes(color = factor(Success))) +
theme_minimal()
ggplot(df, aes(Success, Prob)) +
geom_col(fill="white", aes(color = factor(Success)), show.legend = F) +
theme_minimal()
success <- 0:10
myprob <- dbinom(x,10,prob = 1/2)
df <- data.frame(Success = success, Prob = myprob, CumProb = cumsum(y))
ggplot(df, aes(Success, Prob)) +
geom_col(fill="white", aes(color = factor(Success)), show.legend = F) +
theme_minimal()
ggplot(df, aes(Success, Prob)) +
geom_col(fill="white", aes(color = factor(Success)), show.legend = F, size=2) +
theme_minimal()
ggplot(df, aes(Success, Prob)) +
geom_col(fill="white", aes(color = factor(Success)), show.legend = F, size=1.2) +
theme_minimal()
ggplot(df, aes(Success, Prob)) +
geom_col(fill="white", aes(color = factor(Success)), show.legend = F, size=1) +
theme_minimal()
success <- 0:10
myprob <- dbinom(x,10,prob = 1/2)
df <- data.frame(Success = success, Prob = myprob, CumProb = cumsum(y))
ggplot(df, aes(Success, Prob)) +
geom_col(fill="white", aes(color = factor(Success)), show.legend = F, size=1) +
theme_minimal()
success <- 0:10
myprob <- dbinom(x,10,prob = 9/10)
df <- data.frame(Success = success, Prob = myprob, CumProb = cumsum(y))
ggplot(df, aes(Success, Prob)) +
geom_col(fill="white", aes(color = factor(Success)), show.legend = F, size=1) +
theme_minimal()
?geom_text
ggplot(df, aes(Success, Prob)) +
geom_col(fill="white", aes(color = factor(Success)), show.legend = F, size=1) +
geom_label() + theme_minimal()
df
ggplot(df, aes(Success, Prob)) +
geom_col(fill="white", aes(color = factor(Success)), show.legend = F, size=1) +
geom_text(aes(label = Prob)) + theme_minimal()
ggplot(df, aes(Success, Prob)) +
geom_col(fill="white", aes(color = factor(Success)), show.legend = F, size=1) +
geom_text(aes(label = round(Prob,2))) + theme_minimal()
ggplot(df, aes(Success, Prob)) +
geom_col(fill="white", aes(color = factor(Success)), show.legend = F, size=1) +
geom_text(aes(label = round(Prob,3))) + theme_minimal()
ggplot(df, aes(Success, Prob)) +
geom_col(fill="white", aes(color = factor(Success)), show.legend = F, size=1) +
geom_text(aes(label = round(Prob,3)), nudge_y = 0.02) + theme_minimal()
x <- 1:100
mad(x)
abs(x- mean(x))
sum(abs(x- mean(x)))
mad(x)
median(1:100)
mad(x, constant = 1)
x <- c(5, 13, 83, 78, 38, 60, 26, 95, 97, 95)
x
mad(x, constant = 1)
x <- c(5, 13, 83, 78, 38, 60, 26, 95, 97, 95)
mad(x, center =median(x), constant = 1)
median(x)
x <- c(5, 13, 83, 78, 38, 60, 26, 95, 97, 95)
x
mad(x, center =median(x), constant = 1)
library(swirl)
swirl()
head(flags)
setwd("F:/R_in_Action")
df <- read.csv("advertising.csv")
fit_lm4 <- lm(Sales ~ TV + Radio + TV:Radio, data = df)
summary(fit_lm4)
fit_lm4$coefficients
0.028860+0.001086495*50
0.028860+0.001086495*250
0.028860+0.001086495*50
6.750220203 + 0.019101074*250 + 0.028860340*1 + 0.001086495*(250)*1
.0289 + .0011*50
.0289 + .0011*250
0.0289+0.0011*250
